<%- include('./partials/header') %>

<!-- Full page container -->
<div class="min-h-screen flex items-center justify-center pt-24 transition-colors duration-500 
    bg-gradient-to-br from-emerald-100 via-green-200 to-teal-100 
    dark:bg-gradient-to-r dark:from-gray-900 dark:via-gray-800 dark:to-black">

  <!-- Signup Card -->
  <div class="relative w-full max-w-md rounded-2xl shadow-2xl p-8 
              bg-white/80 dark:bg-white/10 backdrop-blur-xl 
              border border-emerald-200 dark:border-white/20 overflow-hidden">

    <!-- Gradient Overlay -->
    <div class="absolute inset-0 bg-gradient-to-br from-emerald-200/40 to-teal-300/40 
                dark:from-gray-900 dark:via-gray-700 dark:to-black pointer-events-none rounded-2xl"></div>    

    <!-- Content Wrapper -->
    <div class="relative z-10">
      <h1 class="text-3xl font-extrabold text-emerald-700 dark:text-white mb-2 text-center drop-shadow">
        Create Account
      </h1>
      <p class="text-sm text-gray-700 dark:text-gray-300 text-center mb-6">
        Join us and get started
      </p>

      <form id="signupForm" class="space-y-4" novalidate>
        <!-- Full Name -->
        <div>
          <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Full Name</label>
          <input
            id="name"
            name="name"
            type="text"
            class="w-full rounded-xl border border-emerald-200 dark:border-gray-600 px-3 py-2 
                   bg-white/70 dark:bg-gray-700 backdrop-blur-md text-gray-800 dark:text-gray-200 
                   focus:ring-2 focus:ring-emerald-400 outline-none transition-colors duration-300"
            placeholder="John Doe"
          />
          <p id="errorName" class="hidden text-sm text-red-500 mt-1"></p>
        </div>

        <!-- Email -->
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Email</label>
          <input
            id="email"
            name="email"
            type="email"
            autocomplete="username"
            class="w-full rounded-xl border border-emerald-200 dark:border-gray-600 px-3 py-2 
                   bg-white/70 dark:bg-gray-700 backdrop-blur-md text-gray-800 dark:text-gray-200 
                   focus:ring-2 focus:ring-emerald-400 outline-none transition-colors duration-300"
            placeholder="you@example.com"
          />
          <p id="errorEmail" class="hidden text-sm text-red-500 mt-1"></p>
        </div>

        <!-- Password -->
        <div>
          <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Password</label>
          <input
            id="password"
            name="password"
            type="password"
            autocomplete="new-password"
            class="w-full rounded-xl border border-emerald-200 dark:border-gray-600 px-3 py-2 
                   bg-white/70 dark:bg-gray-700 backdrop-blur-md text-gray-800 dark:text-gray-200 
                   focus:ring-2 focus:ring-emerald-400 outline-none transition-colors duration-300"
            placeholder="At least 6 characters"
          />
          <p id="errorPassword" class="hidden text-sm text-red-500 mt-1"></p>
        </div>

        <!-- Confirm Password -->
        <div>
          <label for="confirmPassword" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Confirm Password</label>
          <input
            id="confirmPassword"
            name="confirmPassword"
            type="password"
            autocomplete="new-password"
            class="w-full rounded-xl border border-emerald-200 dark:border-gray-600 px-3 py-2 
                   bg-white/70 dark:bg-gray-700 backdrop-blur-md text-gray-800 dark:text-gray-200 
                   focus:ring-2 focus:ring-emerald-400 outline-none transition-colors duration-300"
            placeholder="Re-enter password"
          />
          <p id="errorConfirmPassword" class="hidden text-sm text-red-500 mt-1"></p>
        </div>

        <!-- Submit Button -->
        <button
          type="submit"
          class="mt-4 w-full rounded-xl 
                 bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-600 hover:to-teal-600 
                  dark:bg-none dark:bg-indigo-600 dark:hover:bg-indigo-700
                  text-white font-semibold rounded-xl shadow-lg py-2.5 
                 shadow-lg active:scale-95">
          Sign up
        </button>

        <p class="text-sm text-center text-gray-600 dark:text-gray-300 mt-4">
          Already have an account?
          <a href="/login" class="text-emerald-700 dark:text-gray-100 font-medium hover:underline">Log in</a>
        </p>
      </form>
    </div>
  </div>
</div>


<%- include('./partials/footer') %>

<script>
  const form = document.getElementById("signupForm");
  const nameInput = document.getElementById("name");
  const emailInput = document.getElementById("email");
  const passInput = document.getElementById("password");
  const confirmPassInput = document.getElementById("confirmPassword");

  const errorName = document.getElementById("errorName");
  const errorEmail = document.getElementById("errorEmail");
  const errorPass = document.getElementById("errorPassword");
  const errorConfirmPass = document.getElementById("errorConfirmPassword");

  const setError = (input, errorEl, msg) => {
    input.classList.remove("border-zinc-200", "dark:border-gray-600");
    input.classList.add("border-red-400", "focus:border-red-400");
    errorEl.textContent = msg;
    errorEl.classList.remove("hidden");
  };

  const clearError = (input, errorEl) => {
    input.classList.remove("border-red-400", "focus:border-red-400");
    input.classList.add("border-zinc-200", "dark:border-gray-600");
    errorEl.classList.add("hidden");
  };

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const nameVal = nameInput.value.trim();
    const emailVal = emailInput.value.trim();
    const passVal = passInput.value.trim();
    const confirmPassVal = confirmPassInput.value.trim();

    let valid = true;

    if (!nameVal) {
      setError(nameInput, errorName, "Name cannot be empty");
      valid = false;
    } else clearError(nameInput, errorName);

    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    if (!emailVal) {
      setError(emailInput, errorEmail, "Email cannot be empty");
      valid = false;
    } else if (!emailRegex.test(emailVal)) {
      setError(emailInput, errorEmail, "Invalid email format");
      valid = false;
    } else clearError(emailInput, errorEmail);

    if (!passVal) {
      setError(passInput, errorPass, "Password cannot be empty");
      valid = false;
    } else if (passVal.length < 6) {
      setError(passInput, errorPass, "Password must be at least 6 characters");
      valid = false;
    } else clearError(passInput, errorPass);

    if (!confirmPassVal || confirmPassVal !== passVal) {
      setError(confirmPassInput, errorConfirmPass, "Passwords do not match");
      valid = false;
    } else clearError(confirmPassInput, errorConfirmPass);

    if (!valid) return;

    try {
      const res = await fetch("/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name: nameVal, email: emailVal, password: passVal }),
      });

      const data = await res.json();
      if (!res.ok) {
        if (data.errorField === "email") setError(emailInput, errorEmail, data.error);
        if (data.errorField === "password") setError(passInput, errorPass, data.error);
        return;
      }

      window.location.assign("/login");
    } catch {
      alert("Server error. Please try again.");
    }
  });

  // Live clear errors
  [nameInput, emailInput, passInput, confirmPassInput].forEach((input, i) => {
    const errors = [errorName, errorEmail, errorPass, errorConfirmPass];
    input.addEventListener("input", () => clearError(input, errors[i]));
  });
</script>


